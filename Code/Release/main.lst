STMicroelectronics list file postprocessor v1.01   (C)2009-2019   Wed Jun 19 15:36:23 2019
Page 1  Assembler
                                               e:\stm8s\elevator\main.asm

   1                         stm8/     
   2                         ;=================================
   3                         ; Author	: ZSAIm
   4                         ;
   5                         ; Function	: Elevator Controller
   6                         ; MCU		: STM8S105k4
   7                         ; LICENSE	: Apache-2.0
   8                         ;=================================
   9                         
   0  000000                                 #include "mapping.inc"
   1                                                          ;-------------------------------
                                                                ;-----------------------
   2                                                          ; SEGMENT MAPPING FILE 
                                                                ;AUTOMATICALLY GENERATED BY 
                                                                ;STVD
   3                                                          ; SHOULD NOT BE MANUALLY 
                                                                ;MODIFIED.
   4                                                          ; CHANGES WILL BE LOST WHEN FILE
                                                                ; IS REGENERATED.
   5                                                          ;-------------------------------
                                                                ;-----------------------
   6  000000                                 #define  RAM0 1
   7  000000                                 #define  ram0_segment_start 0
   8  000000                                 #define  ram0_segment_end FF
   9  000000                                 #define  RAM1 1
  10  000000                                 #define  ram1_segment_start 100
  11  000000                                 #define  ram1_segment_end 5FF
  12  000000                                 #define  stack_segment_start 600
  13  000000                                 #define  stack_segment_end 7FF
<END_OF_INCLUSION>
   0  000000                                 #include "main.inc"
   1                         
   2                         
   3  000000 U                               #IFDEF   __MAIN_ 1
   5                         
   6  000000                                 #define  __MAIN_ 1
   7                         
   8                                                          ; init function
   9  000000                                 extern   HSIClockInit.w
  10  000000                                 extern   OperationInit.w
  11  000000                                 extern   LED_Driver_Init.w
  12  000000                                 extern   Button_Init.w
  13  000000                                 extern   Timer3Init.w
  14                         
  15                                                          ; 
  16                                                          ; extern SendData2FK.w
  17                                                          ; extern SendData2CS.w
  18                                   
  19                                   
  20                                   
  21  000000                                 extern   LED_Refresh.w
  22                         
  23                                                          ; interrupt handler
  24  000000                                 extern   Button_Interrupt_Handler.L
  25  000000                                 extern   Timer3_Interrupt_Handler.L
  26                         
  27  000000                                 #ENDIF   
  28                         
STMicroelectronics list file postprocessor v1.01   (C)2009-2019   Wed Jun 19 15:36:23 2019
Page 2  Assembler
                                               e:\stm8s\elevator\main.asm

  29                         
  30                         
  31                         
  32                         
  33                         
  34                         
  35                         
  36                         
  37                         
<END_OF_INCLUSION>
  12                         
  13                                   
  14                                   segment  'rom'
  15                         main.l    
  16                                                          ; initialize SP
  17  008A51   AE07FF                        ldw      X,#stack_end
  18  008A54   94                            ldw      SP,X
  19                         
  20  008A55                                 #ifdef   1             
  21                                                          ; clear RAM0
  22  000000                       ram0_start.b  EQU      $0
  23  0000FF                       ram0_end.b  EQU      $FF
  24  008A55   AE0000                        ldw      X,#ram0_start
  25                         clear_ram0.l  
  26  008A58   7F                            clr      (X)
  27  008A59   5C                            incw     X
  28  008A5A   A300FF                        cpw      X,#ram0_end   
  29  008A5D   23F9                          jrule    clear_ram0
  30  008A5F                                 #endif   
  31                         
  32  008A5F                                 #ifdef   1
  33                                                          ; clear RAM1
  34  000100                       ram1_start.w  EQU      $100
  35  0005FF                       ram1_end.w  EQU      $5FF          
  36  008A5F   AE0100                        ldw      X,#ram1_start
  37                         clear_ram1.l  
  38  008A62   7F                            clr      (X)
  39  008A63   5C                            incw     X
  40  008A64   A305FF                        cpw      X,#ram1_end   
  41  008A67   23F9                          jrule    clear_ram1
  42  008A69                                 #endif   
  43                         
  44                                                          ; clear stack
  45  000600                       stack_start.w  EQU      $600
  46  0007FF                       stack_end.w  EQU      $7FF
  47  008A69   AE0600                        ldw      X,#stack_start
  48                         clear_stack.l  
  49  008A6C   7F                            clr      (X)
  50  008A6D   5C                            incw     X
  51  008A6E   A307FF                        cpw      X,#stack_end  
  52  008A71   23F9                          jrule    clear_stack
  53                         
  54                         ;;;;;;;;;;;;;;;;;;;;;;;
  55  008A73                                 INTEL    
  56  008A73   CD82DC                        call     HSIClockInit
  57  008A76   CD8911                        call     OperationInit
  58  008A79   CD80E8                        call     LED_Driver_Init
  59  008A7C   CD8080                        call     Timer3Init
STMicroelectronics list file postprocessor v1.01   (C)2009-2019   Wed Jun 19 15:36:23 2019
Page 3  Assembler
                                               e:\stm8s\elevator\main.asm

  60  008A7F   CD82EB                        call     Button_Init
  61                                   
  62  008A82   CD816B                        call     LED_Refresh
  63                         
  64                         
  65                         
  66                         infinite_loop.l  
  67  008A85   8F                            wfi      
  68  008A86   20FD                          jra      infinite_loop
  69                         
  70                                   
  71  008A88                                 MOTOROLA 
  72                         ;;;;;;;;;;;;;;;;;;;;;;;;;
  73  008A88                                 interrupt NonHandledInterrupt
  74                         NonHandledInterrupt.l  
  75  008A88   80                            iret     
  76                         
  77                                   segment  'vectit'
  78  008000   82008A51                      dc.l     {$82000000+main}  ; reset
  79  008004   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; trap
  80  008008   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq0
  81  00800C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq1
  82  008010   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq2
  83  008014   82008404                      dc.l     {$82000000+Button_Interrupt_Handler}  ; irq3
  84  008018   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq4
  85  00801C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq5
  86  008020   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq6
  87  008024   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq7
  88  008028   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq8
  89  00802C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq9
  90  008030   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq10
  91  008034   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq11
  92  008038   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq12
  93  00803C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq13
  94  008040   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq14
  95  008044   820080B9                      dc.l     {$82000000+Timer3_Interrupt_Handler}  ; irq15
  96  008048   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq16
  97  00804C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq17
  98  008050   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq18
  99  008054   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq19
 100  008058   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq20
 101  00805C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq21
 102  008060   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq22
 103  008064   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq23
 104  008068   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq24
 105  00806C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq25
 106  008070   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq26
 107  008074   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq27
 108  008078   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq28
 109  00807C   82008A88                      dc.l     {$82000000+NonHandledInterrupt}  ; irq29
 110                         
 111  008080                                 end      
STMicroelectronics list file postprocessor v1.01   (C)2009-2019   Wed Jun 19 15:36:23 2019
Page 4  Assembler
                                               e:\stm8s\elevator\main.asm

Symbol Name                       Value     Call       Type  Scope      Rel.  Line  Privacy  Segment   Size  Bytes File

Button_Init                           82EB         no  WORD  Internal   ABS     12  private  data         0     0  e:\stm8s\elevator\main.inc
Button_Interrupt_Handler          00008404         no  LONG  Internal   ABS     24  private  data         0     0  e:\stm8s\elevator\main.inc

HSIClockInit                          82DC         no  WORD  Internal   ABS      9  private  data         0     0  e:\stm8s\elevator\main.inc

LED_Driver_Init                       80E8         no  WORD  Internal   ABS     11  private  data         0     0  e:\stm8s\elevator\main.inc
LED_Refresh                           816B         no  WORD  Internal   ABS     21  private  data         0     0  e:\stm8s\elevator\main.inc

NonHandledInterrupt               00008A88  interrupt  LONG  Internal   ABS     74  private  text         1     0  -

OperationInit                         8911         no  WORD  Internal   ABS     10  private  data         0     0  e:\stm8s\elevator\main.inc

Timer3Init                            8080         no  WORD  Internal   ABS     13  private  data         0     0  e:\stm8s\elevator\main.inc
Timer3_Interrupt_Handler          000080B9         no  LONG  Internal   ABS     25  private  data         0     0  e:\stm8s\elevator\main.inc

clear_ram0                        00008A58         no  LONG  Internal   ABS     25  private  text        10     0  -
clear_ram1                        00008A62         no  LONG  Internal   ABS     37  private  text        10     0  -
clear_stack                       00008A6C         no  LONG  Internal   ABS     48  private  text        25     0  -

infinite_loop                     00008A85         no  LONG  Internal   ABS     66  private  text         3     0  -

main                              00008A51         no  LONG  Internal   ABS     15  private  text         7     0  -

ram0_start                              00         no  BYTE  Internal   ABS     22  private  text         0     0  -
ram0_end                                FF         no  BYTE  Internal   ABS     23  private  text         0     0  -
ram1_start                            0100         no  WORD  Internal   ABS     34  private  text         0     0  -
ram1_end                              05FF         no  WORD  Internal   ABS     35  private  text         0     0  -

stack_start                           0600         no  WORD  Internal   ABS     45  private  text         0     0  -
stack_end                             07FF         no  WORD  Internal   ABS     46  private  text         0     0  -


20 labels
No errors on assembly of 'e:\stm8s\elevator\main.asm'